package project.patterngenerator.patterns;

/**
 * Интерфейс нужен для обязательной реализации методов
 * так как общая реализация отсутствует
 * @see Pattern
 */
public interface IPattern {
    /**
     * Возвращает реализацию паттерна на основе его VBox,
     * т.е. у каждого паттерна есть свой VBox, оттуда берутся данные, которые вставляются в возвращаемую строку
     * @return строка, с примером реализации паттерна
     */
    String getCode();

    /**
     * Возвращает вид паттерна,
     * существует 3 вида паттернов:
     *      1) порождающие - creational
     *      2) поведенческие - behavioral
     *      3) структурные - structural
     * @return вид паттерна на английском, какие именно, смотри выше
     */
    String getType();

    /**
     * Возвращает название паттерна,
     * метод получения названия паттерна "this.getClass().getName()" не прокатит,
     * так как он вернет полное название, включая все пакеты,
     * а нужно только краткое название
     * @return название паттерна на английском
     */
    String getName();
}
